const fs = require("fs"); // For reading the JSON file from disk
const dotenv = require("dotenv"); // For loading environment variables
const { Pool } = require("pg"); // PostgreSQL client

// Load environment variables from .env file
dotenv.config();

// Initialize the PostgreSQL connection pool using the DATABASE_URL from .env
const pool = new Pool({
  connectionString: process.env.DATABASE_URL,
  ssl: {
    rejectUnauthorized: false,
    sslmode: "require",
  },
});

// Read the player pool JSON generated by buildPlayerPool.mjs
const rawData = fs.readFileSync("./public/data/fantasyPlayerPool.json");
const playerData = JSON.parse(rawData);

// Insert all players into the database
async function insertPlayers() {
  // Loop through each position (Goalkeeper, Defender, etc.)
  for (const position in playerData) {
    const players = playerData[position];

    // Insert each player into the players table
    for (const p of players) {
      await pool.query(
        `INSERT INTO players (
     id, name, firstname, lastname, photo, team, team_logo,
     rating, points, position, goals, assists, saves, nationality
   )
   VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12, $13, $14)
         ON CONFLICT (id) DO UPDATE SET
           name = EXCLUDED.name,
           firstname = EXCLUDED.firstname,
           lastname = EXCLUDED.lastname,
           photo = EXCLUDED.photo,
           team = EXCLUDED.team,
           team_logo = EXCLUDED.team_logo,
           rating = EXCLUDED.rating,
           points = EXCLUDED.points,
           position = EXCLUDED.position,
           goals = EXCLUDED.goals,
           assists = EXCLUDED.assists,
           saves = EXCLUDED.saves,
           nationality = EXCLUDED.nationality`,
        [
          p.id,
          p.name,
          p.firstname || "",
          p.lastname || "",
          p.photo,
          p.team,
          p.team_logo || "",
          p.rating,
          p.points,
          p.position,
          p.goals || 0,
          p.assists || 0,
          p.saves || 0,
          p.nationality || "Unknown",
        ]
      );
    }
  }

  console.log("All players inserted.");
  await pool.end(); // Close the database connection
}

// Run the script and log any errors that occur
insertPlayers().catch(console.error);
