const fs = require("fs"); // For reading the JSON file from disk
const dotenv = require("dotenv"); // For loading environment variables
const { Pool } = require("pg"); // PostgreSQL client

// Load environment variables from .env file
dotenv.config();

// Initialize the PostgreSQL connection pool using the DATABASE_URL from .env
const pool = new Pool({
  connectionString: process.env.DATABASE_URL,
  ssl: {
    rejectUnauthorized: false,
    sslmode: "require",
  },
});

// Read the player pool JSON generated by buildPlayerPool.mjs
const rawData = fs.readFileSync("./public/data/fantasyPlayerPool.json");
const playerData = JSON.parse(rawData);

// Insert all players into the database
async function insertPlayers() {
  // Loop through each position (Goalkeeper, Defender, etc.)
  for (const position in playerData) {
    const players = playerData[position];

    // Insert each player into the players table
    for (const p of players) {
      await pool.query(
        `INSERT INTO players (id, name, photo, team, rating, points, position)
         VALUES ($1, $2, $3, $4, $5, $6, $7)
         ON CONFLICT (id) DO NOTHING`, // Skip duplicates
        [p.id, p.name, p.photo, p.team, p.rating, p.points, p.position]
      );
    }
  }

  console.log("All players inserted.");
  await pool.end(); // Close the database connection
}

// Run the script and log any errors that occur
insertPlayers().catch(console.error);
